# 수열 S가 주어졌을 때, 수열 S의 부분 수열의 합으로 나올 수 없는 가장 작은 자연수를 구하는 프로그램을 작성하시오.

# 예를 들어, S = [5, 1, 2]인 경우에 1, 2, 3(=1+2), 5, 6(=1+5), 7(=2+5), 8(=1+2+5)을 만들 수 있다. 
# 하지만, 4는 만들 수 없기 때문에 정답은 4이다.

# 입력
# 첫째 줄에 수열 S의 크기 N이 주어진다. (1 ≤ N ≤ 20)

# 둘째 줄에는 수열 S가 주어진다. S를 이루고있는 수는 100,000보다 작거나 같은 자연수이다.

# 출력
# 첫째 줄에 수열 S의 부분 수열의 합으로 나올 수 없는 가장 작은 자연수를 출력한다.

#가장 작은 자연수는 수열각각의 값중 가장 작은 값보다 작거나
# 가장 작은 값(1이겠지) 보다 크다면 두개씩 더한 값중에 제일 작은 값 보다 작거나

import sys
input = sys.stdin.readline

R = [0] * 2000000

def dfs(idx, sum):
    
    if idx >= N:
        return
    sum += nums[idx]
    R[sum] = 1
    dfs(idx + 1, sum - nums[idx])
    dfs(idx + 1, sum)
N = int(input())
nums = list(map(int, input().split()))

dfs(0, 0)
for i in range(1, 2000000):
    if R[i] == 0:
        print(i)
        break



