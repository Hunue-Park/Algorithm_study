# 한수는 크기가 2N × 2N인 2차원 배열을 Z모양으로 탐색하려고 한다. 
# 예를 들어, 2×2배열을 왼쪽 위칸, 오른쪽 위칸, 왼쪽 아래칸, 오른쪽 아래칸 순서대로 방문하면 Z모양이다.
# N > 1인 경우, 배열을 크기가 2N-1 × 2N-1로 4등분 한 후에 재귀적으로 순서대로 방문한다.
import sys

#주어진 N 값과 r, c 의 좌표값을 입력받는다.
N, r, c = map(int, sys.stdin.readline().split())

#재귀함수로 정의
def sol_Z(N, r, c):
    #N을 N-1 로 계속 보내면서 N == 0 이 될때 재귀를 탈출하며 0을 반환한다. 
    if N == 0:
        return 0
    #사실 이 밑에 식 "2 * (r % 2) + (c % 2)"에 'Z' 모양으로 탐색하는 방향성이 담겨있다.
    return 2*(r % 2) + (c % 2) + 4 * sol_Z(N-1, int(r/2), int(c/2))
    #그 후 N-1 로 줄여나가며 해당 함수값의 4배를 더해주면 r,c 좌표에 해당하는 
    #번호를 얻어낼 수 있다.


print(sol_Z(N,r,c))


